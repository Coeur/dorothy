#!/usr/bin/env bash

function eject_all() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Eject all the ejectable drives attached to the system.

			USAGE:
			eject-all
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	echo-segment --h1='eject-all'

	echo-segment --h2='before'
	ls /Volumes
	echo-segment --g2='before'

	eval-helper --quiet \
		--pending="$(echo-style --bold='Ejecting...')" \
		--success="$(echo-style --success='Ejected.')" \
		--failure="$(echo-style --error='Failed to eject.')" \
		-- osascript -e 'tell application "Finder" to eject (every disk whose ejectable is true)'

	echo-segment --h2='after'
	ls /Volumes
	echo-segment --g2='after'

	echo-segment --h1='eject-all'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	eject_all "$@"
fi
