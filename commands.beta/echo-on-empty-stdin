#!/usr/bin/env bash

function echo_on_empty_stdin() (
	source "$DOROTHY/sources/stdinargs.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output the arguments if STDIN is empty.

			USAGE:
			echo-on-empty-stdin <fallback> [...options] [--] ...<input>
			echo-lines ...<input> | echo-on-empty-stdin <fallback> [...options]

			OPTIONS:
			$(stdinargs_options_help --stdin)

			EXAMPLE:

			echo-on-empty-stdin 'my-fallback-value'

			    my-fallback-value
			    # exit status: 0

			echo | echo-on-empty-stdin 'my-fallback-value'

			    my-fallback-value
			    # exit status: 0

			echo 'a-value' | echo-on-empty-stdin 'my-fallback-value'

			    'a-value'
			    # exit status: 0

			ALTERNATIVES:
			Use [ifne] from [moreutils], which is what we use in [eval-on-empty-stdin] and [eval-on-not-empty-stdin].
		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# process <fallback>
	local fallback="$1"
	shift

	# action
	local inputs=''
	function on_arg {
		help 'Use STDIN.'
	}
	function on_input {
		inputs+="$1"
	}
	function on_finish {
		if test -z "$inputs"; then
			print_line "$fallback"
		else
			print_line "$inputs"
		fi
	}
	stdinargs --stdin "$@"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_on_empty_stdin "$@"
fi
