#!/usr/bin/env bash

function setup-util-gocryptfs() (
	source "$DOROTHY/sources/bash.bash"
	require_nullglob
	require_globstar

	# =====================================
	# Arguments

	# help
	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Sets up gocryptfs on your machine.
			https://github.com/rfjakob/gocryptfs

			USAGE:
			setup-util-gocryptfs

			OPTIONS:
			...
			    All other options are forwarded to $(echo-style --code='setup-util').
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item action='install' upgrade='no' util=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--install') action='install' ;;
		'--uninstall') action='uninstall' ;;
		'--no-upgrade'* | '--upgrade'*)
			upgrade="$(
				get-flag-value upgrade --missing="$upgrade" -- "$item" | echo-affirmative
			)"
			;;
		'--action='*) action="${item#*--action=}" ;;
		*) util+=("$item") ;;
		esac
	done

	# ensure action inside util
	util+=(
		"--action=$action"
		"--upgrade=$upgrade"
	)

	# =====================================
	# Setup Utility

	source "$(command -v setup-util)"

	function do_uninstall {
		setup-util --uninstall --cli='gocryptfs' \
			GO='github.com/rfjakob/gocryptfs'
		fs-rm --no-confirm -- "$XDG_BIN_HOME/gocryptfs"
		fs-rm --no-confirm --sudo -- '/usr/local/bin/gocryptfs'
	}
	function do_install_and_build {
		# dependencies
		setup-util-go --quiet
		source "$DOROTHY/sources/environment.sh"
		setup-util-fuse --optional --quiet

		# download the release
		# https://github.com/rfjakob/gocryptfs/releases
		local temp_directory
		temp_directory="$(
			fs-temp \
				--directory='setup-util-gocryptfs' \
				--directory
		)"
		github-download \
			--slug='rfjakob/gocryptfs' \
			--release='latest' \
			--asset-filter='_src-deps.tar.gz' \
			--unzip-format='tar' \
			--directory="$temp_directory"

		# build from source
		chmod +x "$temp_directory/"**"/build.bash"
		# trunk-ignore(shellcheck/SC2211)
		("$temp_directory/"**"/build.bash") # run as subshell in case it changes pwd
		# this creates the executable locally, and also inside "$GOPATH1/bin"

		# make available to sudo, which is necessary for gocryptfs mounts
		# XDG is not available to sudo, so don't do XDG
		sudo-helper -- mkdir -p '/usr/local/bin'
		sudo-helper -- cp -fv "$temp_directory/"**"/gocryptfs" '/usr/local/bin/gocryptfs'
		sudo-helper -- chmod +x '/usr/local/bin/gocryptfs'
		sudo-helper -- chmod +x '/usr/local/bin/gocryptfs'
	}
	function setup_gocryptfs {
		if test "$action" = 'uninstall'; then
			do_uninstall
		elif test "$upgrade" = 'yes'; then
			do_uninstall
			do_install_and_build
		elif test "$action" = 'install'; then
			do_install_and_build
		else
			help "Unsupported action."
		fi
	}

	setup-util "${util[@]}" --cli='gocryptfs' \
		EVAL='setup_gocryptfs'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-gocryptfs "$@"
fi
