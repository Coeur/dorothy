#!/usr/bin/env bash

# https://github.com/rfjakob/gocryptfs

# https://github.com/rfjakob/gocryptfs/releases
# gocryptfs_v2.4.0_linux-static_amd64.tar.gz
# gocryptfs_v2.4.0_linux-static_amd64.tar.gz.asc
# gocryptfs_v2.4.0_src-deps.tar.gz
# gocryptfs_v2.4.0_src-deps.tar.gz.asc
# gocryptfs_v2.4.0_src.tar.gz
# gocryptfs_v2.4.0_src.tar.gz.asc

function setup_util_gocryptfs() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance
	if test "$*" = '--quiet' && command-exists gocryptfs; then
		return 0
	fi

	# enable DOWNLOAD_BUILD_EVAL
	source "$(command -v setup-util)"

	# setup
	local options=(
		--cli='gocryptfs'
		"$@"
		GO='github.com/rfjakob/gocryptfs'
	)
	function do_build {
		# dependencies
		setup-util-go --quiet
		setup-util-fuse --optional --quiet
		source "$DOROTHY/sources/environment.sh"

		# build
		# trunk-ignore(shellcheck/SC2211)
		./*/build.bash
	}
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='rfjakob/gocryptfs' \
			--release='latest' \
			--asset-filter="$(echo-escape-regex "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_BUILD_EVAL='do_build'
			DOWNLOAD_BUILD_FILTER='*/gocryptfs'
		)
	}
	add_download_option '_src-deps.tar.gz'
	setup_util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_gocryptfs "$@"
fi
