#!/usr/bin/env bash

function echo_join() (
	source "$DOROTHY/sources/bash.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Concatenate the inputs with the <separator> between them.

			USAGE:
			echo-join <separator> [--] <...input>
			echo-lines <...input> | echo-join <separator>

			EXAMPLES:

			echo-join '' -- a b

			    ab
			    # exit status: 0

			echo-join ', ' -- a b

			    a, b
			    # exit status: 0

			echo-lines a b | echo-join ', '

			    a, b
			    # exit status: 0

			QUIRKS:
			There will be no newline at the end, in case you your input or separator contains newlines, we do not wish to mangle your intention.
		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# get separator
	local separator="$1"
	shift

	# trim --
	while test "${1-}" = '--'; do
		shift
	done

	# act
	local items=()
	function on_input {
		items+=("$1")
	}
	function on_finish {
		local index
		for index in "${!items[@]}"; do
			if test "$index" -eq 0; then
				printf '%s' "${items[index]}"
			else
				printf '%s%s' "$separator" "${items[index]}"
			fi
		done
	}

	source "$DOROTHY/sources/stdinargs.bash"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_join "$@"
fi
