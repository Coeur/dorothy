#!/usr/bin/env bash

function setup_util_brew() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance for detectable utilities with conditional assets
	if is-needle --quiet "$@" && ! is-needle --upgrade "$@" && ! is-needle --uninstall "$@" && is-brew; then
		return 0
	fi

	# environment provides:
	# HOMEBREW_ARCH, HOMEBREW_PREFIX
	if test -z "${HOMEBREW_ARCH-}" -o -z "${HOMEBREW_PREFIX-}"; then
		echo-error 'HOMEBREW_ARCH and HOMEBREW_PREFIX are missing, cannot setup brew, for some reason this was executed before the Dorothy environment was configured'
		uname -a
		uname -s
		env >&2
		return 6 # ENXIO 6 Device not configured
	fi

	# enable EVAL_INSTALL, etc
	source "$(type -P setup-util)"

	# uninstall brew, and adapt the system accordingly
	function brew_uninstall {
		local remove removals=(
			"${HOMEBREW_PREFIX}/"*
			/usr/local/*
			/opt/homebrew/*
		)

		# reconfigure shells for the lack of brew, by trimming the brew shells
		grep --invert-match --fixed-strings --regexp="$HOMEBREW_PREFIX" /etc/shells | echo-wait --sudo /etc/shells

		# set the default shell to a non-brew shell
		setup-shell --no-brew

		# reset anything that depends on brew
		setup-dns system || :
		setup-git || :

		# uninstall brew
		if is-brew; then
			arch "-${HOMEBREW_ARCH}" /bin/bash -c "$(fetch https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)" -- --force
		fi

		# remove any leftover directories
		for remove in "${removals[@]}"; do
			if test -n "$remove" -a -e "$remove"; then
				sudo-helper -- rm -Rf "$remove" || :
			fi
		done
	}

	# recomended installation method, it is pretty much the only one that works properly
	# https://github.com/balupton/dotfiles/commit/fff6fbc079aaa6ab9bb8438e02c307ebad46fd75
	# https://github.com/balupton/dotfiles/commit/69dbbe81bf30f9e0d9a1dd1d00eca3f3c88b943b
	function brew_install {
		env HOMEBREW_NO_AUTO_UPDATE=1 \
			arch "-${HOMEBREW_ARCH}" /bin/bash -c "$(fetch https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
		source "$DOROTHY/sources/environment.sh" # child processes will also inherit these changes
	}

	# ugprade brew
	function brew_upgrade {
		if is-brew; then
			brew update
		else
			brew_install
		fi
	}

	# setup
	local options=(
		--cli='brew'
		"$@"
		EVAL_INSTALL='brew_install'
		EVAL_UPGRADE='brew_upgrade'
		EVAL_UNINSTALL='brew_uninstall'
	)
	setup_util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_brew "$@"
fi
