#!/usr/bin/env bash

# https://github.com/cronitorio/cronitor-cli

# darwin_amd64.tar.gz
# darwin_arm64.tar.gz
# freebsd_amd64.tar.gz
# freebsd_arm.tar.gz
# freebsd_arm64.tar.gz
# linux_amd64.tar.gz
# linux_arm.tar.gz
# linux_arm64.tar.gz
# windows_amd64.zip

function setup-util-cronitor() (
	source "$DOROTHY/sources/bash.bash"

	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			github_asset_filter='darwin_arm64'
		else
			github_asset_filter='darwin_amd64'
		fi
	elif test "$arch" = 'a64'; then
		github_asset_filter='linux_arm64'
	elif test "$arch" = 'a32'; then
		github_asset_filter='linux_arm'
	elif test "$arch" = 'x64'; then
		github_asset_filter='linux_amd64'
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='cronitorio/cronitor-cli'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter.tar.gz"
			GITHUB_UNZIP_FILTER='**/cronitor'
			GITHUB_FILENAME='cronitor'
		)
	fi

	# install, preferring github
	setup-util "$@" --cli='cronitor' --order='github ...' \
		"${github[@]}"

	# move it to a place sudo can access
	if test -x "$XDG_BIN_HOME/cronitor"; then
		sudo-helper -- mv -v "$XDG_BIN_HOME/cronitor" '/usr/bin/cronitor'
	fi

	# configure
	if ! cronitor status &>/dev/null; then
		token="$(
			ask --required \
				--question=$'What is your Cronitor API Key?\nYou get this from: https://cronitor.io/app/settings/api' \
				--default="${CRONITOR_API_KEY-}"
		)"
		sudo-helper -- cronitor configure --api-key "$token" >/dev/null
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-cronitor "$@"
fi
