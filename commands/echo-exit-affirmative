#!/usr/bin/env bash

function echo_exit_affirmative() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Given a command as arguments, execute it, and:
			if [0] was the exit code, output [yes]
			if [1] was the exit code, output [no]
			if anything else was the exit code, propagate that exit code

			USAGE:
			echo-exit-affirmative [--] ...<command>

			EXAMPLES:
			echo-exit-affirmative -- exit 0    # outputs: yes    exit code: 0
			echo-exit-affirmative -- exit 1    # outputs: no     exit code: 0
			echo-exit-affirmative -- exit 2    # exit code: 2
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item cmd=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			cmd+=("$@")
			shift "$#"
			break
			;;
		*) cmd+=("$item") ;;
		esac
	done

	# check
	if test "${#cmd[@]}" -eq 0; then
		help "No <command> was provided."
	fi

	# =====================================
	# Action

	local ec
	eval_capture --statusvar=ec -- "${cmd[@]}"
	if test "$ec" -eq 0; then
		echo 'yes'
	elif test "$ec" -eq 1; then
		echo 'no'
	else
		return "$ec"
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_exit_affirmative "$@"
fi
