#!/usr/bin/env bash

function get_github_release() (
	source "$DOROTHY/sources/bash.bash"
	require_array 'mapfile'

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get the latest release of a GitHub repository.

			USAGE:
			get-github-release [<org>/<repo>] [...options]

			OPTIONS:
			--slug=<org>/<repo> | <org>/<repo>
			    E.g. 'bevry/dorothy'
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item slug=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--slug='*) slug="${item#*--slug=}" ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$slug"; then
				slug="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	if test -z "$slug"; then
		help "A GitHub repository slug is required."
	fi

	# GITHUB_API_URL
	if test -z "${GITHUB_API_URL-}"; then
		# https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
		GITHUB_API_URL='https://bevry.me/api/github'
		# encounters rate limits 'https://api.github.com'
	fi

	# =====================================
	# Act

	fetch --bearer-token="${GITHUB_TOKEN-}" "$GITHUB_API_URL/repos/$slug/releases" | jq -r ".[0] | select(.draft==false) | .tag_name"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	get_github_release "$@"
fi
