#!/usr/bin/env bash

# https://github.com/chmln/sd
# sed/awk alternative

# https://github.com/chmln/sd/releases
# sd-v0.7.6-x86_64-apple-darwin
# sd-v0.7.6-x86_64-unknown-linux-gnu
# sd-v0.7.6-x86_64-unknown-linux-musl

# arm64
# https://github.com/chmln/sd/issues/152
# https://github.com/yhakbar/sd/releases/tag/v0.7.7-yhakbar
# sd-v0.7.7-yhakbar-aarch64-apple-darwin
# sd-v0.7.7-yhakbar-aarch64-unknown-linux-musl
# sd-v0.7.7-yhakbar-arm-unknown-linux-gnueabihf
# sd-v0.7.7-yhakbar-x86_64-apple-darwin
# sd-v0.7.7-yhakbar-x86_64-unknown-linux-gnu
# sd-v0.7.7-yhakbar-x86_64-unknown-linux-musl

function setup_util_sd() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance
	if test "$*" = '--quiet' && command-exists sd; then
		return 0
	fi

	# no zypper
	local arch options=(
		--cli='sd'
		"$@"
		AUR='sd'
		BREW='sd'
		BSD='sd'
		CARGO='sd'
		CHOCO='sd-cli'
		EMERGE='sys-apps/sd'
		RPM='sd'
		XBPS='sd'
	)
	arch="$(get-arch)"
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='yhakbar/sd' \
			--release='latest' \
			--asset-filter="$(echo-escape-regex "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
		)
	}
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_option '-aarch64-apple-darwin'
		else
			add_download_option '-x86_64-apple-darwin'
		fi
	else
		arch="$(get-arch)"
		if test "$arch" = 'a64'; then
			add_download_option '-aarch64-unknown-linux-musl'
		elif test "$arch" = 'x64'; then
			add_download_option '-x86_64-unknown-linux-musl'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_sd "$@"
fi
