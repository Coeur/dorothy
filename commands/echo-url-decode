#!/usr/bin/env bash

function echo-url-decode() (
	source "$DOROTHY/sources/bash.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			For each input, decode it's URL entities.

			USAGE:
			echo-url-decode <...input>
			echo-lines <...input> | echo-url-decode

			EXAMPLE:

			echo-url-decode 'https://sup.com/hello%20world'

			    https://sup.com/hello world
			    # exit status: 0

			echo-lines 'https://sup.com/hello%20world' | echo-url-decode

			    https://sup.com/hello world
			    # exit status: 0

		EOF
		return 22 # Invalid argument
	}

	function on_input {
		if command-exists deno; then
			deno eval --quiet \
				"console.log(decodeURI(Deno.args[0]))" \
				"$1"
		elif command-exists node; then
			node -e "console.log(decodeURI(process.argv[1]))" "$1"
		elif command-exists php; then
			# trunk-ignore(shellcheck/SC2016)
			php -R 'echo urldecode($argv[0]);' "$1"
		elif command-exists perl; then
			perl -pe 's/\%(\w\w)/chr hex $1/ge' "$1"
		else
			echo-error "No suitable decoder found. Install [deno], [node], [php], or [perl] then try again."
			return 1
		fi
	}

	source "$DOROTHY/sources/stdinargs.bash"

	# url
	# node: node -e "process.stdout.write(decodeURI(require('fs').readFileSync(0, 'utf8')))"
	# perl: perl -pe 's/\%(\w\w)/chr hex $1/ge'
	# php -R 'echo urldecode($argn);'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo-url-decode "$@"
fi
