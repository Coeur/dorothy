#!/usr/bin/env bash

function until_success() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Run a command until it succeeds.

			USAGE:
			until-success [--timeout=10] [--] <command ...>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item command=() timeout=5
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--timeout='*) timeout="${item#*--timeout=}" ;;
		'--')
			command+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) command+=("$item") ;;
		esac
	done

	# check
	if test "${#command[@]}" -eq 0; then
		echo-style --error="No <command> was provided. See [$0 --help] for usage."
		return 22 # EINVAL 22 Invalid argument
	fi

	# =====================================
	# Action

	function attempt {
		local attempt_status
		eval_capture --status=attempt_status -- "$@"
		if test "$attempt_status" -ne 0; then
			echo-style --warning="FAILURE"
			echo-style --code="$*" --notice=" failed with exit code " --code="$attempt_status" --notice=", trying again in " --code="$timeout" --notice=" seconds..."
			sleep "$timeout"
			attempt "$@"
		fi
	}
	attempt "${command[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	until_success "$@"
fi
