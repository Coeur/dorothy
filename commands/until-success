#!/usr/bin/env bash

function until_success() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Run a command until it succeeds.

			USAGE:
			until-success [--timeout=10] [--] ...<command> [...args]
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_cmd=() option_timeout=10
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--timeout='*) option_timeout="${item#*=}" ;;
		'--')
			option_cmd+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_cmd+=("$item") ;;
		esac
	done

	# check
	if test "${#option_cmd[@]}" -eq 0; then
		help 'No <option_cmd> was provided.'
	fi

	# =====================================
	# Action

	local title
	title="$(echo-escape-newlines -- "${option_cmd[@]}" | echo-quote --stdin | echo-join ' ' --stdin)"

	function attempt {
		local attempt_status
		eval_capture --statusvar=attempt_status -- "$@"
		if test "$attempt_status" -ne 0; then
			waiter "$option_timeout" --message="$(echo-element --openclose="$title" --status="$attempt_status" ' ' --notice='Next attempt in %s...')"
			attempt "$@"
		fi
	}
	attempt "${option_cmd[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	until_success "$@"
fi
