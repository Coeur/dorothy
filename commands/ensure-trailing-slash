#!/usr/bin/env bash

function ensure_trailing_slash() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Ensure directories have a trailing newline.
			Ensure files do not have a trailing newline.

			USAGE:
			ensure-trailing-slash [--] ...<path>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item paths=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--')
			paths+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) paths+=("$item") ;;
		esac
	done

	# check
	if test "${#paths[@]}" -eq 0; then
		echo-style --error="No <path> was provided. See [$0 --help] for usage."
		return 22 # EINVAL 22 Invalid argument
	fi

	# =====================================
	# Action

	local path length
	for path in "${paths[@]}"; do
		if test -d "$path"; then
			if [[ $path != */ ]]; then
				echo_line "$path/"
			else
				echo_line "$path"
			fi
		elif test -f "$path"; then
			if [[ $path == */ ]]; then
				length="${#path}"
				echo_line "${path:0:length-1}"
			else
				echo_line "$path"
			fi
		else
			echo-style --error="[$path] is not a file nor directory." >/dev/stderr
			return 1
		fi
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	ensure_trailing_slash "$@"
fi
