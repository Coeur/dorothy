#!/usr/bin/env bash

# https://github.com/junegunn/fzf
# https://github.com/junegunn/fzf/releases/tag/0.42.0
# fuzzy finder

# fzf-0.42.0-darwin_amd64.zip
# fzf-0.42.0-darwin_arm64.zip
# fzf-0.42.0-freebsd_amd64.tar.gz
# fzf-0.42.0-linux_amd64.tar.gz
# fzf-0.42.0-linux_arm64.tar.gz
# fzf-0.42.0-linux_armv5.tar.gz
# fzf-0.42.0-linux_armv6.tar.gz
# fzf-0.42.0-linux_armv7.tar.gz
# fzf-0.42.0-linux_loong64.tar.gz
# fzf-0.42.0-linux_ppc64le.tar.gz
# fzf-0.42.0-linux_s390x.tar.gz
# fzf-0.42.0-openbsd_amd64.tar.gz
# fzf-0.42.0-windows_amd64.zip
# fzf-0.42.0-windows_arm64.zip
# fzf-0.42.0-windows_armv5.zip
# fzf-0.42.0-windows_armv6.zip
# fzf-0.42.0-windows_armv7.zip

function setup-util-fzf() (
	source "$DOROTHY/sources/bash.bash"

	# determine github args if github is an option on this platform
	local arch github_asset_filter='' github=()
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'x64'; then
			github_asset_filter='-darwin_amd64'
		elif test "$arch" = 'a64'; then
			github_asset_filter='-darwin_arm64'
		fi
	elif is-linux; then
		if test "$arch" = 'x64'; then
			github_asset_filter='-linux_amd64'
		elif test "$arch" = 'a64'; then
			github_asset_filter='-linux_arm64'
		elif test "$arch" = 'a32'; then
			github_asset_filter='-linux_armv7'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			github_asset_filter='-windows_amd64'
		elif test "$arch" = 'a64'; then
			github_asset_filter='-windows_arm64'
		elif test "$arch" = 'a32'; then
			github_asset_filter='-windows_armv7'
		fi
	fi
	if test -n "$github_asset_filter"; then
		github+=(
			GITHUB_SLUG='junegunn/fzf'
			GITHUB_RELEASE='latest'
			GITHUB_ASSET_FILTER="$github_asset_filter"
			GITHUB_UNZIP_FILTER='**/fzf'
			GITHUB_FILENAME='fzf'
		)
	fi

	# install, preferring github
	# despite docs, no fd
	setup-util "$@" --cli='fzf' --order='github ...' \
		"${github[@]}" \
		APK='fzf' \
		APT='fzf' \
		AUR='fzf' \
		BREW='fzf' \
		CHOCO='fzf' \
		DNF='fzf' \
		EMERGE='app-shells/fzf' \
		NIX='nixpkgs.fzf' \
		PKG='fzf' \
		PKGADD='fzf' \
		PKGIN='fzf' \
		SCOOP='fzf' \
		WINGET='fzf' \
		XBPS='fzf' \
		ZYPPER='fzf'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-fzf "$@"
fi
