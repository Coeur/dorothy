#!/usr/bin/env bash

function echo_quiet() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Outputs [yes] or [no] based on comprehensive QUIET mode detection.

			USAGE:
			echo-quiet [...options] <default> -- "\$@"

			OPTIONS:
			--no-env
			    If provided, don't test the environment for quiet.

			EXAMPLE:
			local option_quiet=''
			option_quiet="\$(echo-quiet "\$option_quiet" -- "\$@")"

			QUIRKS:
			Checks for [--[no-][verbose|quiet]=[yes|no]] values, as well as [QUIET|VERBOSE] environment variables.
			If wasn't able to detect anything, nothing is returned.
		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item default='' option_env='yes'
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-env'* | '--env'*)
			option_env="$(get-flag-value env --missing="$option_env" -- "$item" | echo-affirmative)"
			;;
		--)
			# process
			local verbose='' quiet=''
			while test "$#" -ne 0; do
				item="$1"
				shift
				case "$item" in
				'--no-verbose'* | '--verbose'*)
					verbose="$(get-flag-value verbose -- "$item" | echo-trim-zero-length | echo-affirmative)"
					;;
				'--no-quiet'* | '--quiet'*)
					quiet="$(get-flag-value quiet -- "$item" | echo-trim-zero-length | echo-affirmative)"
					;;
				*) ;; # ignore
				esac
			done
			# action
			if test -n "$verbose"; then
				echo-non-affirmative "$verbose"
			elif test -n "$quiet"; then
				echo-affirmative "$quiet"
			elif test "$option_env" = 'yes' -a -n "${VERBOSE-}"; then
				echo-non-affirmative "$VERBOSE"
			elif test "$option_env" = 'yes' -a -n "${QUIET-}"; then
				echo-affirmative "$QUIET"
			elif test -n "$default"; then
				print_line "$default"
			fi
			# done
			return 0
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$default"; then
				default="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done
	help "A [--] separator must be provided."
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_quiet "$@"
fi
