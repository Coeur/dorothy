#!/usr/bin/env bash

# https://github.com/jqlang/jq

# https://github.com/stedolan/jq/releases
# jq-1.7rc1.tar.gz
# jq-1.7rc1.zip
# jq-linux-amd64
# jq-linux-arm64
# jq-linux-armel
# jq-linux-armhf
# jq-linux-i386
# jq-linux-mips
# jq-linux-mips64
# jq-linux-mips64el
# jq-linux-mips64r6
# jq-linux-mips64r6el
# jq-linux-mipsel
# jq-linux-mipsr6
# jq-linux-mipsr6el
# jq-linux-powerpc
# jq-linux-ppc64el
# jq-linux-riscv64
# jq-linux-s390x
# jq-macos-amd64
# jq-macos-arm64
# jq-windows-amd64.exe
# jq-windows-i386.exe

# https://packages.debian.org/sid/amd64/jq/filelist
# /usr/bin/jq

# https://repology.org/project/jq/versions

function setup_util_jq() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance
	if is-needle --quiet "$@" && ! is-needle --upgrade "$@" && ! is-needle --uninstall "$@" && command-exists jq; then
		return 0
	fi

	# setup
	local arch options=(
		--cli='jq'
		"$@"
		APK='jq' # ALPINE
		APT='jq' # UBUNTU
		AUR='jq' # ARCH
		BREW='jq'
		BSD='jq'
		CHOCO='jq'
		EMERGE='app-misc/jq' # GENTOO
		NIX='jq'
		PORT='jq'
		RPM='jq' # FEDORA
		TEA='+stedolan.github.io/jq'
		URPMI='jq' # MAGEIA
		WINGET='jq'
		XBPS='jq'   # VOID
		ZYPPER='jq' # SUSE
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='jqlang/jq' \
			--release='latest' \
			--asset-filter="$(echo-escape-regex -- "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_option '-macos-arm64'
		elif test "$arch" = 'x64'; then
			add_download_option '-macos-amd64'
		fi
	elif is-wsl; then
		if test "$arch" = 'x64'; then
			add_download_option '-windows-amd64.exe'
		elif test "$arch" = 'x32'; then
			add_download_option '-windows-i386.exe'
		fi
	else
		if test "$arch" = 'r64'; then
			add_download_option '-linux-riscv64'
		elif test "$arch" = 'a64'; then
			add_download_option '-linux-arm64'
		elif test "$arch" = 'a32'; then
			add_download_option '-linux-armhf'
		elif test "$arch" = 'x64'; then
			add_download_option '-linux-amd64'
		elif test "$arch" = 'x32'; then
			add_download_option '-linux-i386'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_jq "$@"
fi
