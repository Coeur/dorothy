#!/usr/bin/env bash

function get_app() (
	source "$DOROTHY/sources/bash.bash"

	# @todo support linux systems, so [setup-util-1passsword] can detect successful install
	local dirs=(
		"$HOME/Applications"
		'/Applications'
		'/Applications/Setapp'
		'/System/Applications' # TextEdit
	)

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get the full path of a GUI application.

			USAGE:
			get-app [--quiet] <app path or name>

			QUIRKS:
			Searches the following paths for the application:
			$(echo-lines -- "${dirs[@]}")
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item name='' quiet
	quiet="$(is-quiet-enabled -- "$@")"
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--name='*) name="${item#*--name=}" ;;
		'--no-quiet'* | '--quiet'* | '--no-verbose'* | '--verbose'*) ;; # handled by is-quiet-enabled
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$name"; then
				name="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# check
	if test -z "$name"; then
		help "No application name or path was provided"
	fi

	# =====================================
	# Act

	if is-mac; then
		# ensure the name has .app appended
		local app="${name%.app}.app"

		# iterate through a few options
		local dir path
		for dir in "${dirs[@]}"; do
			path="$dir/$app"
			if test -d "$path"; then
				if test "$quiet" != 'yes'; then
					print_line "$path"
				fi
				return 0
			fi
		done

		# wasn't found
		return 1
	elif is-wsl; then
		if command-missing winget.exe; then
			echo-error 'Install Winget to be able to detect applications'
			return 6 # ENXIO 6 Device not configured
		fi
		if test "$quiet" = 'yes'; then
			winget.exe list --disable-interactivity "$name" &>/dev/null
		else
			winget.exe list --disable-interactivity "$name"
		fi
		return
	else
		echo-error 'Support for Applications not added yet for this platform.'
		return 19 # ENODEV 19 Operation not supported by device
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	get_app "$@"
fi
