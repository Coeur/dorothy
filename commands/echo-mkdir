#!/usr/bin/env bash

function echo_mkdir() (
	source "$DOROTHY/sources/stdinargs.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Make a directory at each input path, if it was not already one, and output its absolute path.

			USAGE:
			echo-mkdir [...options] [--] ...<input>
			echo-lines ...<input> | echo-mkdir [...options]

			OPTIONS:
			--sudo
			    If provided, use sudo to make the directory.

			$(stdinargs_options_help --)

			EXAMPLE:

			echo-mkdir -- ./temp

			    $(pwd)/temp
			    # exit status: 0

		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# process our own arguments, delegate everything else to stdinargs
	local item option_sudo='no' args=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value sudo --missing="$option_sudo" -- "$item" | echo-affirmative --stdin)"
			;;
		'--')
			args+=("$item" "$@")
			shift $#
			break
			;;
		*) args+=("$item") ;;
		esac
	done

	# construct command
	local cmd=()
	if test "$option_sudo" = 'yes'; then
		cmd=(
			'sudo-helper'
			'--'
			'mkdir'
			'-p'
		)
	else
		cmd=(
			'mkdir'
			'-p'
		)
	fi

	# =====================================
	# Action

	function on_input {
		if test -d "$1" || ("${cmd[@]}" "$1"); then
			fs-absolute -- "$1"
			return 0
		else
			return 1
		fi
	}

	stdinargs "${args[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_mkdir "$@"
fi
