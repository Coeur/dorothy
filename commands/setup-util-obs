#!/usr/bin/env bash

# https://github.com/obsproject/obs-studio/releases
# OBS-Studio-29.1.2-Full-Installer-x64.exe
# obs-studio-29.1.2-macos-arm64.dmg
# obs-studio-29.1.2-macos-x86_64.dmg
# OBS-Studio-29.1.2.zip
# obs-studio_29.1.2-0obsproject1.focal_amd64.deb
# obs-studio_29.1.2-0obsproject1.jammy_amd64.deb
# obs-studio_29.1.2-0obsproject1.kinetic_amd64.deb
# obs-studio_29.1.2-0obsproject1.lunar_amd64.deb

function setup_util_obs() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance
	if test "$*" = '--quiet' && get-app --quiet 'OBS'; then
		return 0
	fi

	# determine options
	local arch options=(
		--name='Open Broadcaster Software'
		--app='OBS'
		"$@"
		CASK='obs'
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='obsproject/obs-studio' \
			--release='latest' \
			--asset-filter="$(echo-escape-regex "$1")$" | echo-first-line || :
	}
	function add_download_app_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_UNZIP_FILTER='*/OBS.app'
			DOWNLOAD_FILENAME='OBS.app'
		)
	}
	function add_installer_option {
		options+=(
			INSTALLER="$(get_github_asset_url "$1")"
			INsTALLER_OPEN=yes
		)
	}
	function add_deb_option {
		options+=(
			DEB="$(get_github_asset_url "$1")"
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_app_option '-macos-arm64.dmg'
		elif test "$arch" = 'x64'; then
			add_download_app_option '-macos-x86_64.dmg'
		fi
	elif is-wsl; then
		add_installer_option '-Full-Installer-x64.exe'
	elif is-ubuntu && test "$arch" = 'x64'; then
		add_deb_option ".$(get-ubuntu-release-name)_amd64.deb"
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_obs "$@"
fi
