#!/usr/bin/env bash

# https://github.com/ogham/exa
# ls alternative

# https://github.com/ogham/exa/releases
# exa-accoutrements-v0.10.1.zip
# exa-linux-armv7-v0.10.1.zip
# exa-linux-x86_64-musl-v0.10.1.zip
# exa-linux-x86_64-v0.10.1.zip
# exa-macos-x86_64-v0.10.1.zip
# exa-vendored-source-v0.10.1.zip

# arm64
# https://github.com/ogham/exa/issues/414

# https://packages.debian.org/sid/amd64/exa/filelist
# /usr/bin/exa

function setup_util_exa() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance
	if test "$*" = '--quiet' && command-exists exa; then
		return 0
	fi

	# despite docs, no apk
	local arch options=(
		--cli='exa'
		"$@"
		APT='exa'
		AUR='exa'
		BREW='exa'
		BSD='exa'
		CARGO='exa'
		EMERGE='sys-apps/exa'
		NIX='exa'
		PORT='exa'
		RPM='exa'
		XBPS='exa'
		ZYPPER='exa'
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='ogham/exa' \
			--release='latest' \
			--asset-filter="$(echo-escape-regex "$1")" | echo-first-line || : # don't use $ as version number is after the arch
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_UNZIP_FILTER='*/exa'
		)
	}
	if is-mac; then
		add_download_option '-macos-x86_64'
	else
		arch="$(get-arch)"
		if test "$arch" = 'a32'; then
			add_download_option '-linux-armv7'
		elif test "$arch" = 'x64'; then
			add_download_option '-linux-x86_64-musl'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_exa "$@"
fi
