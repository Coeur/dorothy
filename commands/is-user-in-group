#!/usr/bin/env bash

function is_user_in_group() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	# help
	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if the current user, or a specified user is part of a group.

			USAGE:
			is-user-in-group [...options]

			OPTIONS:
			--user=<user>
			    User to check exists in <group>.

			--group=<group>
			    Group to check <user> exists inside.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item users=() groups=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--user='*) users+=("${item#*--user=}") ;;
		'--group='*) groups+=("${item#*--group=}") ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# ensure user
	if test "${#users[@]}" -eq 0; then
		users+=("$(whoami)")
	fi

	# check group
	if test "${#groups[@]}" -eq 0; then
		help "A <group> is required."
	fi

	# confirm `groups` is available
	# vscode flatpak doesn't have it, so vscode flatpak terminal will fail
	# groups: command not found
	if command-missing groups; then
		help 'This operating-system is unsupported, as the helper utility [groups] was not available.'
		# @todo can the helper utility be installed?
		return 19 # ENODEV 19 Operation not supported by device
	fi

	# =====================================
	# Action

	# dependencies
	source "$DOROTHY/sources/ripgrep.bash"

	# action
	local user group
	for user in "${users[@]}"; do
		for group in "${groups[@]}"; do
			groups "$user" | rg -Fqo "$group"
		done
	done

)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_user_in_group "$@"
fi
