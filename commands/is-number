#!/usr/bin/env bash

function is_number_test() (
	source "$DOROTHY/sources/bash.bash"
	echo-segment --h1="TEST: $0"

	eval-tester --name='zero' --status=0 \
		-- is-number 0

	eval-tester --name='one' --status=0 \
		-- is-number 1

	eval-tester --name='ten' --status=0 \
		-- is-number 10

	eval-tester --name='decimal' --status=0 \
		-- is-number 0.1

	eval-tester --name='triple decimal' --status=1 \
		-- is-number 1.1.1

	eval-tester --name='negative' --status=0 \
		-- is-number -1

	eval-tester --name='negative 10' --status=0 \
		-- is-number -10

	eval-tester --name='negative decimal' --status=0 \
		-- is-number -1.1

	eval-tester --name='negative triple decimal' --status=1 \
		-- is-number -1.1.1

	eval-tester --name='empty' --status=1 \
		-- is-number ''

	eval-tester --name='letter' --status=1 \
		-- is-number 'a'

	eval-tester --name='combo' --status=1 \
		-- is-number '-0a'

	echo-segment --g1="TEST: $0"
	return 0
)
function is_number() (
	source "$DOROTHY/sources/bash.bash"

	# if [[ $1 == ?(-)+([0-9])?([.]+([0-9])) ]]; then # does not work in bash v3
	if [[ $1 =~ ^[-]?[0-9]+(\.[0-9]+)?$ ]]; then # does not work in bash v3
		return 0
	else
		return 1
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	if test "$*" = '--test'; then
		is_number_test
	else
		is_number "$@"
	fi
fi
