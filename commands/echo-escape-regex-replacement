#!/usr/bin/env bash

function echo_escape_backslash() (
	source "$DOROTHY/sources/bash.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			For each input, escape any characters that would interfere with a regex replacement.

			USAGE:
			echo-escape-regex-replacement <...input>
			echo-lines <...input> | echo-escape-regex-replacement

			EXAMPLE:

			echo-escape-regex-replacement 'Special: \040b'

			    Hello \$\$world. Special: \\\\040b
			    # exit status: 0

			echo-escape-regex-replacement 'Special: \040b' | echo-escape-regex-replacement

			    Hello \$\$world. Special: \\\\040b
			    # exit status: 0

		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	function on_input {
		local value="$1"
		value="${value//\\/\\\\}"
		value="${value//$/\$$}" # https://github.com/chmln/sd/issues/129
		echo_line "$value"
	}

	source "$DOROTHY/sources/stdinargs.bash"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_escape_backslash "$@"
fi
