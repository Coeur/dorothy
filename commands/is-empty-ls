#!/usr/bin/env bash

function is_empty_ls() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checks if <path> has no contents.

			USAGE:
			is-empty-ls [...options] [--] ...<path>

			OPTIONS:
			--sudo
			    If specified, use sudo on filesystem interactions.
			--user=<user>
			--group=<group>
			    If specified use this user and/or group for filesystem interactions.

			RETURNS:
			[0] if all <path>s were empty.
			[1] if any <path>s were not empty.
			[2] if any <path> were not a directory.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_paths=() option_sudo='no' option_user='' option_group=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-sudo'* | '--sudo'*)
			option_sudo="$(get-flag-value --affirmative --fallback="$option_sudo" -- "$item")"
			;;
		'--user='*) option_user="${item#*=}" ;;
		'--group='*) option_group="${item#*=}" ;;
		'--')
			option_paths+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) option_paths+=("$item") ;;
		esac
	done

	# check
	if test "${#option_paths[@]}" -eq 0; then
		help "No <path>s provided."
	fi

	# =====================================
	# Action

	# call this again, but inside sudo
	if test "$option_sudo" = 'yes' -o -n "$option_user" -o -n "$option_group"; then
		sudo-helper --inherit --user="$option_user" --group="$option_group" \
			-- is-empty-ls -- "${option_paths[@]}"
		return
	fi

	local path
	for path in "${option_paths[@]}"; do
		if test ! -d "$path"; then
			echo-error 'A path was was not a directory: ' --code="$path"
			return 2
		fi
		test -z "$(ls -A "$path")"
	done
	return 0
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_empty_ls "$@"
fi
