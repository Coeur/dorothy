#!/usr/bin/env bash

# https://stackoverflow.com/a/1603436/130638
# sed -e '/^$/,$d' "$@"

function echo_before_blank() (
	source "$DOROTHY/sources/bash.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Get everything before the first blank line.

			USAGE:
			echo-before-blank [options] [--] <...input>
			echo-lines <...input> | echo-before-blank [options]

			OPTIONS:
			--append=<append>
			    Append this string to the end of the output.

			EXAMPLE:

			echo-before-blank a b '' c d

			    a
			    b
			    # exit status: 0

			echo-before-blank --append=$'z\n' -- a b '' c d

			    a
			    b
			    z
			    # exit status: 0

			echo-lines a b '' c d | echo-before-blank

			    a
			    b
			    # exit status: 0

			echo-before-blank <<< "\$(echo-lines a b '' c d)"

			    a
			    b
			    # exit status: 0
		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_append='' ARGS=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--append='*) option_append="${item#*--append=}" ;;
		'--')
			ARGS+=("$@")
			shift "$#"
			break
			;;
		*)
			ARGS+=("$item" "$@")
			shift "$#"
			break
			;;
		esac
	done

	# action
	BREAK='no'
	function on_input {
		if test -z "$1"; then
			BREAK='yes'
		else
			echo_line "$1"
		fi
	}
	function on_finish {
		if test -n "$option_append"; then
			echo_string "$option_append"
		fi
	}

	source "$DOROTHY/sources/stdinargs.bash"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_before_blank "$@"
fi
