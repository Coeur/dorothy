#!/usr/bin/env bash

function setup_util_resilio() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Preparation

	local service_title='Resilio Sync'
	local service_ids=(
		'resilio-sync'
	)
	local service_uninstall_paths=(
		# user data
		"$XDG_CONFIG_HOME/resilio-sync"
		'/etc/resilio-sync/'
		# '/etc/resilio-sync/config.json'

		# app data
		'/var/lib/resilio-sync/'
	)

	# =====================================
	# Setup Utility

	# https://help.resilio.com/hc/en-us/articles/206178924
	# https://help.resilio.com/hc/en-us/articles/204762449-Guide-to-Linux
	# https://help.resilio.com/hc/en-us/articles/206178924-Installing-Sync-package-on-Linux

	# install utility with forwarded+custom arguments
	setup-util "${util[@]}" --name='Resilio Sync' \
		APT_KEY='https://linux-packages.resilio.com/resilio-sync/key.asc' \
		APT_REPO='deb [arch={ARCH} signed-by={KEY}] http://linux-packages.resilio.com/resilio-sync/deb resilio-sync non-free' \
		APT='resilio-sync'

	# stop at uninstall?
	if test "$action" = 'uninstall'; then
		service-helper --remove -- \
			-- "${service_ids[@]}"
		fs-rm --sudo --confirm \
			-- "${service_uninstall_paths[@]}"
		# all done for uninstall
		return 0
	fi

	# =====================================
	# Setup Service

	# only manage the service if it is supported
	if service-helper --supported; then
		# verify the service was initialised
		if service-helper --exists -- "${service_ids[@]}"; then
			# disable autostart
			service-helper --disable --stop \
				-- "${service_ids[@]}"
		else
			# headful/headless, no service
			echo-error "$0: $service_title was installed, however the service was not."
			return 1
		fi
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_resilio "$@"
fi
