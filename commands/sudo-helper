#!/usr/bin/env bash

# sudo a command helpering environment and path
# https://stackoverflow.com/q/257616/130638

function sudo-helper() (
	source "$DOROTHY/sources/bash.bash"
	source "$(command -v config-edit)"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Run a command as root, be it via sudo or doas, or neither if not needed.

			USAGE:
			sudo-helper [...options] -- <command...>
			sudo-helper --local

			OPTIONS:

			--user=<user>
			    specify a user to run the command as

			--group=<group>
			    specify a group to run the command as

			--inherit
			    if enabled, inherit environment variables include PATH.

			--local
			    update sudo configuration to enable access to /usr/local variables
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item cmd=() inherit='no' user='' group='' option_local=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-inherit'* | '--inherit'*)
			inherit="$(get-flag-value inherit --missing="$inherit" -- "$item" | echo-affirmative || :)"
			;;
		'--no-local'* | '--local'*)
			option_local="$(get-flag-value local --missing="$option_local" -- "$item" | echo-affirmative || :)"
			;;
		'--user='*) user="${item#*--user=}" ;;
		'--group='*) group="${item#*--group=}" ;;
		'--')
			cmd+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# local
	if test -n "$option_local"; then
		# dependencies
		setup-util-sd --quiet

		# paths
		local system_paths sudoers_line cron_system_line cron_user_line
		system_paths="$(echo "$PATH" | sd "$HOME/.+?:" '')"
		sudoers_line="Defaults	secure_path=\"$system_paths\"" # $HOME paths do not make sense for root operation
		cron_system_line="PATH=\"$system_paths\""             # $HOME paths do not make sense for root operation
		cron_user_line="PATH=\"$system_paths\""               # $HOME paths fails to apply

		# sudoers
		config-edit --sudoers --line="$sudoers_line" --needle='secure_path' --add="$option_local"

		# cron
		config-edit --cron-system --line="$cron_system_line" --needle='PATH=' --add="$option_local"
		config-edit --cron-user --line="$cron_user_line" --needle='PATH=' --add="$option_local"

		# done
		return
	fi

	# check
	if test "${#cmd[@]}" -eq 0; then
		echo-style --error="No <command> was provided. See [$0 --help] for usage."
		return 22 # EINVAL 22 Invalid argument
	fi

	# =====================================
	# Action

	# https://man.openbsd.org/doas
	# https://man.archlinux.org/man/doas.1.en

	# sudo
	# https://manpages.ubuntu.com/manpages/xenial/man8/sudo.8.html
	# -E, --preserve-env
	#    preserve user environment when running command
	# -H, --set-home
	#    set HOME variable to target user's home dir
	# -i, --login
	#    Run the shell specified by the target user's password database entry as a login shell.

	local args=() home=''
	if command-exists sudo; then
		if test -n "$user"; then
			args+=("--user=$user")
			# should coincide with setup-environment-commands
			if test -d /Users; then
				home="/Users/$user"
			elif test -d '/home'; then
				home="/home/$user"
			elif test -d "/$user"; then
				HOME="/$user"
			fi
		elif test -n "$HOME"; then
			home="$HOME"
		fi

		if test -n "$group"; then
			args+=("--group=$group")
		fi

		if test -n "$home"; then
			if test ! -e "$home"; then
				sudo mkdir -p "$home"
				fs-own --quiet --user="$user" --group="$group" -- "$home"
			fi
			args+=('--set-home')
		fi

		if test "$inherit" = 'yes'; then
			args+=(
				'--preserve-env'
				'env'
				"PATH=$PATH"
			)
		fi

		sudo "${args[@]}" "${cmd[@]}"
	elif command-exists doas; then
		# https://man.archlinux.org/man/doas.1.en
		if test -n "$user"; then
			args+=(
				'-u'
				"$user"
			)
		fi
		if test -n "$group"; then
			help "doas does not support --group"
		fi
		if test "$inherit" = 'yes'; then
			args+=(
				'env'
				"DOROTHY=$DOROTHY"
				"PATH=$PATH"
			)
		fi
		doas "${args[@]}" "${cmd[@]}"
	else
		"${cmd[@]}"
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	sudo-helper "$@"
fi
