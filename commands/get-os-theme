#!/usr/bin/env bash

# https://stackoverflow.com/q/2507337/130638
# https://github.com/dandavison/delta/issues/447#issuecomment-1239398586

function get_os_theme() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output $(echo-style --code="light") or $(echo-style --code="dark") based on the theme of the Operating System.

			USAGE:
			get-os-theme

			OPTIONS:
			--refresh
			    If provided, do not trust the THEME environment variable.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item option_refresh='no'
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-refresh'* | '--refresh'*)
			option_refresh="$(get-flag-value refresh --missing="$option_refresh" -- "$item" | echo-affirmative)"
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	local result
	if test "$option_refresh" = 'no' -a -n "${THEME-}"; then
		if test "$THEME" = 'dark'; then
			print_line 'dark'
		else
			print_line 'light'
		fi
	elif is-mac; then
		# result="$(defaults read -globalDomain AppleInterfaceStyle || :)" <-- always reports Dark on macOS Ventura
		result="$(osascript -e 'tell application "System Events" to tell appearance preferences to get dark mode' || :)"
		if test "$result" = 'true'; then
			print_line 'dark'
		else
			print_line 'light'
		fi
	elif command-exists gsettings; then
		result="$(gsettings get org.gnome.desktop.interface gtk-theme || :)"
		if [[ $result == *'dark'* ]]; then
			print_line 'dark'
		else
			print_line 'light'
		fi
	else
		# don't use echo-style here, as echo-style uses this
		print_line "Unable to determine the Operating System theme." >/dev/stderr
		return 19 # ENODEV 19 Operation not supported by device
	fi

)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	get_os_theme "$@"
fi
