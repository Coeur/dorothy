#!/usr/bin/env bash

# CLI
# https://app-updates.agilebits.com/product_history/CLI
# https://app-updates.agilebits.com/product_history/CLI2

function setup-util-1password() (
	source "$DOROTHY/sources/bash.bash"

	local zip='' pkg='' platform arch version
	platform="$(uname -s)"
	arch="$(get-arch)"

	# dependencies
	source "$DOROTHY/sources/ripgrep.bash"
	setup-util-devel --quiet # sponge

	# determine cli version
	# || : to avoid exit code 141
	version="v$(fetch 'https://app-updates.agilebits.com/product_history/CLI2' | sponge | rg -o 'https://cache.agilebits.com/dist/1P/op2/pkg/v([^/-]+)/' --replace '$1' --max-count 1 || :)"

	# fetch cli urls
	if test "$platform" = 'Darwin'; then
		pkg="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_apple_universal_$version.pkg"
		# uninstall cask version as it lags behind
		setup-util "$@" --quiet --optional --uninstall --name='1Password CLI' \
			CASK='homebrew/cask-versions/1password-cli-beta' \
			CASK_TAP='homebrew/cask-versions'
	elif test "$platform" = 'Linux'; then
		if test "$arch" = 'a64'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_linux_arm64_$version.zip"
		elif test "$arch" = 'a32'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_linux_arm_$version.zip"
		elif test "$arch" = 'x64'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_linux_amd64_$version.zip"
		elif test "$arch" = 'x32'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_linux_386_$version.zip"
		fi
	elif test "$platform" = 'FreeBSD'; then
		if test "$arch" = 'a64'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_freebsd_arm64_$version.zip"
		elif test "$arch" = 'a32'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_freebsd_arm_$version.zip"
		elif test "$arch" = 'x64'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_freebsd_amd64_$version.zip"
		elif test "$arch" = 'x32'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_freebsd_386_$version.zip"
		fi
	elif test "$platform" = 'OpenBSD'; then
		if test "$arch" = 'a64'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_openbsd_arm64_$version.zip"
		elif test "$arch" = 'x64'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_openbsd_amd64_$version.zip"
		elif test "$arch" = 'x32'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_openbsd_386_$version.zip"
		fi
	elif test "$platform" = 'Windows'; then
		if test "$arch" = 'x64'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_windows_amd64_$version.zip"
		elif test "$arch" = 'x32'; then
			zip="https://cache.agilebits.com/dist/1P/op2/pkg/$version/op_windows_386_$version.zip"
		fi
	fi

	# install cli
	setup-util "$@" --name='1Password CLI' --cli=op \
		DOWNLOAD="$zip" DOWNLOAD_FILENAME='op' DOWNLOAD_UNZIP_FILTER='op' \
		INSTALLER="$pkg" INSTALLER_OPEN='yes'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup-util-1password "$@"
fi
