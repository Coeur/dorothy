#!/usr/bin/env bash

function fs-size() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Output detailed size information about a path.

			USAGE:
			fs-size [--] ...<path>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item quiet='no' paths=()
	quiet="$(echo-quiet "$quiet" -- "$@")"
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-quiet'* | '--quiet'* | '--no-verbose'* | '--verbose'*) ;; # handled by echo-quiet
		'--')
			paths+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) paths+=("$item") ;;
		esac
	done

	# check
	if test "${#paths[@]}" -eq 0; then
		help "No <paths> were provided."
	fi

	# =====================================
	# Dependencies

	setup-util-dust --quiet

	# =====================================
	# Action

	function act {
		local path="$1"
		export title conclusion=''
		if test "$quiet" != 'yes'; then
			title="fs-size $(echo-quote "$path")"
			echo-segment --h2="$title"
			conclusion="$(
				echo-style --red="failed to determine size."
			)"
			function on_return {
				local ec="$?"
				if test "$ec" -eq 0; then
					echo-segment --g2="$title" " $conclusion"
				else
					echo-segment --e2="$title" " $conclusion"
				fi
				trap - RETURN EXIT
				return "$ec"
			}
			trap on_return RETURN EXIT # RETURN is success, EXIT is exceptions
		fi

		# is the path missing
		if test ! -e "$path"; then
			conclusion="is missing."
			return 2 # No such file or directory
		fi

		# note its contents
		echo
		eval-helper --no-quiet --wrap \
			-- ls -la "$path"
		echo
		if test -d "$path"; then
			eval-helper --no-quiet --wrap \
				-- dust --no-percent-bars "$path"
			echo
			eval-helper --no-quiet --wrap \
				-- dust --no-percent-bars --filecount "$path"
			echo
		fi

		# note the conclusion
		if is-empty-ls "$path"; then
			conclusion="is an empty directory."
		elif is-empty-size "$path"; then
			conclusion="is only empty directories."
		else
			# leftovers
			conclusion="has non-empty files."
		fi
	}

	local path
	for path in "${paths[@]}"; do
		act "$path"
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	fs-size "$@"
fi
