#!/usr/bin/env bash

function echo-url-encode() (
	source "$DOROTHY/sources/bash.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			For each input, encode it's URL entities.

			USAGE:
			echo-url-encode <...input>
			echo-lines <...input> | echo-url-encode

			EXAMPLE:

			echo-url-encode 'https://sup.com/hello world'

			    https://sup.com/hello%20world
			    # exit status: 0

			echo-lines 'https://sup.com/hello world' | echo-url-encode

			    https://sup.com/hello%20world
			    # exit status: 0

		EOF
		return 22 # Invalid argument
	}

	# recode doesn't support url encoding/decoding: https://github.com/rrthomas/recode/issues/51
	# xmlstarlet is only for html/xml encoding/decoding
	function on_input {
		if command-exists deno; then
			deno eval --quiet \
				"console.log(encodeURI(Deno.args[0]))" \
				"$1"
		elif command-exists node; then
			node -e "console.log(encodeURI(process.argv[1]))" "$1"
		elif command-exists php; then
			# trunk-ignore(shellcheck/SC2016)
			php -R 'echo urlencode($argv[0]);' "$1"
		elif command-exists python3; then
			python3 -c "import urllib.parse; print(urllib.parse.quote('''$1'''))"
		else
			get-installer --first-success --invoke --quiet -- deno node php python3
			on_input "$@"
		fi
	}

	source "$DOROTHY/sources/stdinargs.bash"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo-url-encode "$@"
fi
