#!/usr/bin/env bash

function echo_split() (
	source "$DOROTHY/sources/bash.bash"
	require_array 'mapfile'

	# invalid arguments
	if test "${2-}" != '--'; then
		echo_line "Usage: $0 <deliminator> -- ..." >/dev/stderr
		return 1
	fi

	# no delim and newline delim are equivalent
	# no need for anything complicated
	# just echo each argument, which will put each part on a newline
	if test -z "${1-}" -o "${1-}" = $'\n'; then
		echo-lines -- "${@:3}"
		return $?
	fi

	# we have a delim, so split each argument by it
	for arg in "${@:3}"; do
		# without a trailing delim added, then the last item will have a trailing newline attached
		# so we add a trailing delim to ensure the last item will be an empty newline which can be ignored
		mapfile -td "$1" parts <<<"${arg}${1}"
		echo-lines -- "${parts[@]::${#parts[@]}-1}"
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_split "$@"
fi
