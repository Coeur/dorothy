#!/usr/bin/env sh

# This is an internal command, no need for help handling.

command_exists() { # üëç /docs/bash/errors: robust exit status
	type "$1" >/dev/null 2>&1
}
try_sudo() { # üëç /docs/bash/errors: robust exit status
	if command_exists sudo; then
		sudo "$@" || return
	elif command_exists doas; then
		doas "$@" || return
	else
		"$@" || return
	fi
}

# only use double quotes, as we wrap it in single quotes in setup-docker --debug

domain="api.nordvpn.com"
server="9.9.9.9"
invalid="192.0.2.1"

echo "PING:"
ping -c 5 "$server"
ping -c 5 "$domain"

echo "NSLOOKUP:"
nslookup search

# install curl, dig (bind-tools/dnsutils), whois
if command_exists apk; then
	try_sudo apk update
	try_sudo apk add curl bind-tools
elif command_exists apt; then
	try_sudo apt update
	try_sudo apt install -y curl dnsutils whois
elif command_exists pacman; then
	try_sudo pacman -Syu
	try_sudo pacman -Sy curl dnsutils
elif command_exists zypper; then
	try_sudo zypper update
	try_sudo zypper install curl dnsutils
fi

echo "DATE:"
date

echo "RESOLVE:"
systemd-resolve --status

echo "DNS LISTENERS:"
try_sudo ss -lp "sport = :domain"

echo "LISTENERS:"
try_sudo netstat -tulpn | grep LISTEN

echo "DNS:"
try_sudo resolvectl dns

echo "RESOLV:"
cat /etc/resolv.conf

echo "ROUTE:"
try_sudo route -n

echo "DIG:"
dig "$domain"

echo "TRACE:"
dig +trace "$domain"

echo "DIG @%s:" "$invalid"
dig @"$invalid" "$domain"

echo "DIG @%s:" "$server"
dig @"$server" hostname.bind chaos txt
dig @"$server" id.server chaos txt

echo "HOST:"
host -va "$domain"

echo "NSLOOKUP:"
nslookup -debug "$domain"

echo "CURL:"
curl "$domain"

echo "PING:"
ping -c 5 "$domain"

echo "WHOIS:"
whois "$domain"

# maybe_sudo apt install traceroute
# inetutils-traceroute is worse

# echo "TRACEROUTE:"
# traceroute -p 53 "$server"

# echo "TRACEROUTE -r:"
# traceroute -r -p 53 "$server"
