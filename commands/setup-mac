#!/usr/bin/env bash

function setup_mac() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Configure macOS to our expectations.

			USAGE:
			setup-mac <install|update>
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item action=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$action"; then
				action="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# assert operating system
	if ! is-mac; then
		help "This command is only purposeful on macOS, which you are not running."
	fi

	# assert action
	if test -z "$action"; then
		help "No action provided."
	fi

	# generate log title
	local title
	title="$(uppercase_first_letter "$action") macOS"

	# =====================================
	# Action

	# log
	echo-segment --h1="$title"

	# action
	if test "$action" = 'clean'; then
		local caches=(
			"$HOME/Library/Application Support/Plex Media Server/Updates"
			"$HOME/Library/Application Support/Spotify/PersistentCache/Update"
			"$XDG_CACHE_HOME"
		)
		local essentials=(
			"$XDG_CACHE_HOME"
			# gems, @todo is this still necessary?
			"$XDG_CACHE_HOME/gems"
			# pip, @todo is this still necessary?
			"$XDG_CACHE_HOME/pip/http"
			"$HOME/Library/Caches/pip/http"
		)

		# Clean brew
		setup-mac-brew clean

		# Clean caches
		echo-segment --h2='Cleaning caches'
		fs-rm --no-confirm --quiet --sudo -- "${caches[@]}" || :
		mkdir -p "${essentials[@]}"
		echo-segment --g2='Cleaned caches'

		# npm
		if command-exists npm; then
			{
				echo-segment --h2='Cleaning npm caches'
				source "$DOROTHY/sources/nvm.sh"
				{
					# use `|| :`` as nvm is a function
					nvm use node || :
					npm cache clean --force || :
					nvm use system || :
					npm cache clean --force || :
					nvm use default || :
					npm cache clean --force || :
				} &>/dev/null
				echo-segment --g2='Cleaned npm caches'
			} || {
				echo-segment --e2='Cleaned npm caches'
			}
		fi

	elif test "$action" = 'install' -o "$action" = 'update'; then
		# dependencies
		setup-util-xcode

		# essentials
		setup-mac-brew "$action"
		# ^ setup-util-devel done as part of this

		# ensure the updated bash is available to what comes after
		source "$DOROTHY/sources/environment.sh"

		# install and upgrade mac app store apps
		if test "$action" = 'install'; then
			setup-mac-appstore --install --upgrade
		else
			setup-mac-appstore --upgrade
		fi
	else
		# unknown action
		help "An unrecognised action was provided: $action"
	fi

	# log
	echo-segment --g1="$title"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_mac "$@"
fi
