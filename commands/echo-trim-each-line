#!/usr/bin/env bash

function echo_trim_each_line() (
	source "$DOROTHY/sources/stdinargs.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Trims surrounding whitespace from each line.

			USAGE:
			echo-trim-each-line [...options] [--] ...<input>
			echo-lines ...<input> | echo-trim-each-line [...options]

			OPTIONS:
			$(stdinargs_options_help --)

			EXAMPLE:

			echo-trim-each-line -- ' a '

			    a

			echo-trim-each-line -- $'\t a \t\n b '

			    a
			    b

			echo-lines -- $'\t a \t' ' b ' | echo-trim-each-line --stdin

			    a
			    b

		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	function on_input {
		print_line "$1" # on_input already trims each line!

		# local str="$1"
		# str="${str#"${str%%[![:space:]]*}"}"
		# str="${str%"${str##*[![:space:]]}"}"
		# print_line "$str"

		# print_line "$1" | grep -o '^[[:space:]]*[^[:space:]]\+[[:space:]]*$'
		# print_line "$1" | awk '{$1=$1};1'
		# print_line "$1" | sd '^[[:blank:]]+|[[:blank:]]+$' ''
		# print_line "$1" | sed -e 's/^[[:blank:]]+|[[:blank:]]+$//'
	}

	stdinargs "$@"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_trim_each_line "$@"
fi
