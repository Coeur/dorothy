#!/usr/bin/env bash

function echo_checksum() (
	source "$DOROTHY/sources/bash.bash"

	local item algorithms=()
	for item in 'md5' 'md5sum' 'shasum' 'sha256sum'; do
		if command-exists "$item"; then
			algorithms+=("$item")
		fi
	done

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Checksum each input string.
			For checksumming files or directories, use [checksum] instead.

			USAGE:
			echo-checksum [...options] <...input>
			echo-lines <...input> | echo-checksum [...options]

			OPTIONS:
			--algorithm=<algorithm>
			    Forces a specific algorithm to be used.

			ALGORITHMS:
			We have determined the following algorithms are available on your system:
			$(echo-lines --indent='    ' "${algorithms[@]}")

			EXAMPLE:

			echo-checksum 'hello' 'world'

				https://sup.com/hello world
				# exit status: 0

			echo-lines 'hello' 'world' | echo-checksum

				https://sup.com/hello world
				# exit status: 0

		EOF
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item algorithm='' ARGS=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--algorithm='*) algorithm="${item#*--algorithm=}" ;;
		'--')
			ARGS+=("$@")
			shift "$#"
			break
			;;
		*)
			ARGS+=("$item" "$@")
			shift "$#"
			break
			;;
		esac
	done

	# ensure algorithm
	if test -z "$algorithm"; then
		# ensure default
		algorithm="${algorithms[0]}"
	else
		# ensure valid algorithm, will automatically convert md5 to md5sum if md5 was not available
		algorithm="$(
			choose-option --required \
				--question='Which checksum algorithm do you wish to use?' \
				--filter="$algorithm" -- "${algorithms[@]}"
		)"
	fi

	# =====================================
	# Action

	function on_input {
		case "$algorithm" in
		'md5') md5 -qs "$1" ;;
		'md5sum') echo -n "$1" | md5sum --text | cut -f1 -d ' ' ;;
		'shasum') echo -n "$1" | shasum --text | cut -f1 -d ' ' ;;
		'sha256sum') echo -n "$1" | sha256sum --text | cut -f1 -d ' ' ;;
		*) help "Unavailable <algorithm>" ;;
		esac
	}

	source "$DOROTHY/sources/stdinargs.bash"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_checksum "$@"
fi
