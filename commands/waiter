#!/usr/bin/env bash

function waiter() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Take a break.

			USAGE:
			waiter [--options]

			OPTIONS:

			[--timeout=<timeout>] [<timeout>]
			    How many seconds to wait for before timing out.

			[--exists=<path>]
			    If the path exists, then exit immediately.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item timeout='' exists=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--exists='*) exists="${item#*--exists=}" ;;
		'--timeout='*) timeout="${item#*--timeout=}" ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$timeout"; then
				timeout="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done

	# ensure
	if test -z "$timeout"; then
		timeout=5
	fi

	# =====================================
	# Action

	for ((i = timeout; i > 0; i--)); do
		if test -n "$exists" -a -e "$exists"; then
			break
		fi
		echo-style --dim="Waiting $i seconds..."
		sleep 1
		echo-clear-line
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	waiter "$@"
fi
