#!/usr/bin/env bash

function date-helper() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Outputs the date in a specific format, defaulting to local ISO time.

			USAGE:
			date-helper [--options] [-- ...<arg>]

			OPTIONS:
			--format=...
			    The format to use, e.g. '+%Y-%m-%d'

			--adguard
			    Sets the format to be compatible with AdGuard rules, e.g. 22 Feb 2022 23:11 UTC

			--iso
			    Sets the format to be compatible with ISO 8601, e.g. 2022-02-22T23:11:11Z

			--gpg
			    Sets the format to be compatible with GPG, e.g. 2022-02-22

			-- ...<arg>
			    Forwards to the argument to the native date command.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # Invalid argument
	}

	# process
	local item args=() format='' utc='' nextyear='no'
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--format='*) format="${item:9}" ;;
		'--no-utc'* | '--utc'*) utc="$(
			get-flag-value utc --missing="$utc" -- "$item" | echo-affirmative
		)" ;;
		'--nextyear' | '--next-year') nextyear='yes' ;;
		'--gpg')
			utc='no'
			format='+%Y-%m-%d'
			;;
		'--iso')
			# https://stackoverflow.com/a/7216394/130638
			utc='yes'
			format='+%Y-%m-%dT%H:%M:%SZ'
			;;
		# https://github.com/AdguardTeam/FiltersRegistry/issues/398
		'--adguard')
			utc='yes'
			format='+%d %b %Y %H:%M UTC'
			;;
		'--unix')
			utc='yes'
			format='+%s'
			;;
		'--')
			args+=("$@")
			shift $#
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) help "An unrecognised argument was provided: $item" ;;
		esac
	done

	# =====================================
	# Action

	local args=() year

	#  -u      Display or set the date in UTC (Coordinated Universal) time.  By default date displays the time in the time zone described by /etc/localtime or the TZ environment variable.
	if test "$utc" = 'yes'; then
		args+=('-u')
	fi
	if test "$nextyear" = 'yes'; then
		if is-mac; then
			args+=('-v' '+1y')
		else
			# get the current date, but one year in the future, and work on linux
			year="$(date "+%Y")"
			year="$((year + 1))"
			# macos: date -jf "%Y-%m-%d" -f "$year-$(date "+%m-%d")" "$format"
			args+=("--date=$year-$(date "+%m-%d")")
		fi
	fi

	# format
	if test -n "$format"; then
		args+=("$format")
	elif test "${#args[@]}" -eq 0; then
		# https://stackoverflow.com/a/34138409/130638
		args+=("+%FT%T%z")
	fi
	date "${args[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	date-helper "$@"
fi
