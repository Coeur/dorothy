#!/usr/bin/env bash

# thanks to http://unix.stackexchange.com/a/358209/50703 for the help on this one

function together_() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Run and show multiple commands at the same time.

			USAGE:
			together <...commands>

			EXAMPLE:
			together 'waiter 5' 'waiter 10'
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item commands=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		--)
			commands+=("$@")
			shift $#
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) commands+=("$item") ;;
		esac
	done

	# check
	if test "${#commands[@]}" -eq 0; then
		help 'No <commands> were provided.'
	fi

	# =====================================
	# Dependencies

	setup-util-screen --quiet

	# =====================================
	# Act

	local id config cmd
	config="$(fs-temp --directory='together' --file)"
	id="$(basename "$config")"
	print_line "screen ${commands[0]}" >>"$config"
	for cmd in "${commands[@]:1}"; do
		cat <<-EOF >>"$config"
			split
			focus
			screen $cmd
		EOF
	done
	screen -AS "$id" -c "$config"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	together_ "$@"
fi
