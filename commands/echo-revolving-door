#!/usr/bin/env bash

function echo_revolving_door() (
	source "$DOROTHY/sources/bash.bash"

	local cols queue line

	# the `|| test -n` trick is from https://unix.stackexchange.com/a/418067/50703
	# and allows trailing lines that do not have a trealing newline to still work
	# as is the case with:
	# sudo-helper -- pacman -S --needed --noconfirm --quiet bash-completion |& echo-revolving-door

	# see echo-clear-line, and echo-clear-lines for similar commands

	# cols is essential, as lines larger than the window will wrap and become two cusor lines
	#    and we can't have that
	# macos terminal will always have cols=80 (or whatever the terminal preferences set),
	#    and it does not adjust to resizes
	cols="$(tput cols 2>/dev/null || :)"

	# if we are not running in a TTY, [tput cols] will fail, so just dump stdin if that is the case
	# tput: No value for $TERM and no -T specified
	if test -z "$cols"; then
		cat
	else
		# we are in a TTY, so proceed with revolving door
		queue=0

		# timeout will cause read to emit a failure exit code, which causes the while loop to fail, which causes everything to fail
		while read -r -n "$cols" line || test -n "$line"; do
			if test -z "$line"; then
				# don't output empty lines, as that is confusing in a revolving-door context
				continue
			fi
			while test "$queue" -ne 0; do
				printf '\e[F\e[J'
				queue=$((queue - 1))
			done
			print_line "$line"
			queue=$((queue + 1))
		done </dev/stdin

		while test "$queue" -ne 0; do
			printf '\e[F\e[J'
			queue=$((queue - 1))
		done
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	echo_revolving_door "$@"
fi
