#!/usr/bin/env bash

# https://github.com/melbahja/got

# https://github.com/melbahja/got/releases
# got_0.7.0_Darwin_amd64.tar.gz
# got_0.7.0_Darwin_arm64.tar.gz
# got_0.7.0_Freebsd_32bit.tar.gz
# got_0.7.0_Freebsd_amd64.tar.gz
# got_0.7.0_Freebsd_arm64.tar.gz
# got_0.7.0_Freebsd_armv6.tar.gz
# got_0.7.0_Linux_32bit.tar.gz
# got_0.7.0_Linux_amd64.tar.gz

# @todo add bsd support

function setup_util_got() (
	source "$DOROTHY/sources/bash.bash"

	# improve performance
	if is-needle --quiet "$@" && ! is-needle --upgrade "$@" && ! is-needle --uninstall "$@" && command-exists got; then
		return 0
	fi

	# setup
	local arch options=(
		--cli=got
		"$@"
		GO='github.com/melbahja/got' # /cmd/got
	)
	function get_github_asset_url {
		github-download \
			--dry \
			--slug='melbahja/got' \
			--release='latest' \
			--asset-filter="$(echo-escape-regex "$1")$" | echo-first-line || :
	}
	function add_download_option {
		options+=(
			DOWNLOAD="$(get_github_asset_url "$1")"
			DOWNLOAD_UNZIP_FILTER='got'
		)
	}
	arch="$(get-arch)"
	if is-mac; then
		if test "$arch" = 'a64'; then
			add_download_option '_Darwin_arm64.tar.gz'
		elif test "$arch" = 'x64'; then
			add_download_option '_Darwin_amd64.tar.gz'
		fi
	else
		if test "$arch" = 'x64'; then
			add_download_option '_Linux_amd64.tar.gz'
		elif test "$arch" = 'x32'; then
			add_download_option '_Linux_32bit.tar.gz'
		fi
	fi
	setup-util "${options[@]}"
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_util_got "$@"
fi
