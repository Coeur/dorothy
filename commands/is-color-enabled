#!/usr/bin/env bash

function is_color_enabled() (
	source "$DOROTHY/sources/bash.bash"

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Outputs [yes] or [no] based on comprehensive COLOR mode detection.

			USAGE:
			use_color="\$(is-color-enabled <default> -- "\$@")"

			QUIRKS:
			Checks for [--[no-]color[s]=[yes|no]] values, as well as [[NO[_]]COLOR] and [CRON], [CRONITOR_EXEC], and [TERM] environment variables.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item default=''
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		--)
			# process
			local color=''
			while test "$#" -ne 0; do
				item="$1"
				shift
				case "$item" in
				'--no-colors'* | '--colors'*)
					color="$(get-flag-value colors -- "$item" | echo-affirmative --stdin)"
					;;
				'--no-color'* | '--color'*)
					color="$(get-flag-value color -- "$item" | echo-affirmative --stdin)"
					;;
				*) ;; # ignore
				esac
			done
			# action
			if test -n "$color"; then
				echo-affirmative -- "$color"
			elif test -n "${COLOR-}"; then
				echo-affirmative -- "$COLOR"
			elif test -n "${NO_COLOR-}"; then
				echo-non-affirmative -- "$NO_COLOR"
			elif test -n "${NOCOLOR-}"; then
				echo-non-affirmative -- "$NOCOLOR"
			elif test -n "${CRON-}" -o -n "${CRONITOR_EXEC-}" -o -z "${TERM-}" -o "${TERM-}" = 'dumb'; then
				# cron strips most env vars, except that defined in [crontab -e], bash however does itself set TERM=dumb
				# https://unix.stackexchange.com/a/411097
				print_line 'no'
			else
				print_line "$default"
			fi
			# done
			return 0
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*)
			if test -z "$default"; then
				default="$item"
			else
				help "An unrecognised argument was provided: $item"
			fi
			;;
		esac
	done
	help 'A [--] separator must be provided.'
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_color_enabled "$@"
fi
