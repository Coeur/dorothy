#!/usr/bin/env bash

function is_affirmative() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Return success status if all items were affirmative.
			Returns failure status [1] if any item was non-affirmative.
			Returns failure status [2] if invalid values were provided, or no items were provided.

			USAGE:
			is-affirmative [...options] [--] <...items>

			OPTIONS:
			--ignore-empty:
			    Ignore/skip empty values.
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item items=() ignore_empty='no'
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--no-ignore-empty'* | '--ignore-empty'*)
			ignore_empty="$(get-flag-value ignore-empty --missing="$ignore_empty" -- "$item" | echo-affirmative)"
			;;
		'--')
			items+=("$@")
			shift "$#"
			break
			;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		'') ;; # ignore empty values
		*) items+=("$item") ;;
		esac
	done

	# =====================================
	# Action

	local had_affirmative='no'

	for item in "${items[@]}"; do
		case "$item" in
		'Y' | 'y' | 'YES' | 'yes' | 'TRUE' | 'true') had_affirmative='yes' ;;
		'N' | 'n' | 'NO' | 'no' | 'FALSE' | 'false') return 1 ;;
		'')
			if test "$ignore_empty" = 'yes'; then
				continue
			else
				return 2
			fi
			;;
		*) return 2 ;;
		esac
	done

	if test "$had_affirmative" = 'no'; then
		return 2
	else
		return 0
	fi
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	is_affirmative "$@"
fi
